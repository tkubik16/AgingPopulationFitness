@page "/injuries"
@inject HttpClient HttpClient
@inject UserClient UserClient
@inject InjuryState InjuryState
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject InjuryState InjuryState
@inject UserState UserState

<h3>Injuries</h3>
<button @onclick="@(() => InjuryState.ShowConfigureUserInjuryDialog())">Add Injury</button>
@if (InjuryState.ShowingConfigureDialog)
{
    <AddInjuryDialog  
        userInjury="InjuryState.ConfiguringUserInjury"
        OnCancel="InjuryState.CancelConfigureUserInjuryDialog"
        OnConfirm="InjuryState.ConfirmConfigureUserInjuryDialog"/>
}
@if( userInjuries.Count == 0)
{
    <div class="spinner"></div>
}
<div class="main">
    <ul class="user-injury-cards">
        @if (userInjuries != null)
        {
            @foreach (var userInjury in userInjuries)
            {
                <li >
                    <div class="user-injury-info">
                        <span class="title">@userInjury.InjuryName</span>
                        <span class="title">Severity: @userInjury.InjurySeverity</span>
                        <span class="title">Date: @userInjury.InjuryDate</span>
                        <span class="title">Description:</span>
                        <span class="title">@userInjury.InjuryDescription</span>

                        <div class="injuries">
                            @foreach (var injuryLocation in userInjury.InjuryLocations)
                            {
                                <div class="injury">
                                    @injuryLocation.BodyPart
                                </div>
                            }
                        </div>
                    </div>
                </li>
                
            }
        }
    </ul>
</div>

@code {
    public List<UserInjury> userInjuries = new List<UserInjury>();

    protected override async Task OnInitializedAsync()
    {
        if (UserState.userProfile.UserId != null)
        {
            try
            {
                //Console.WriteLine("Injuries razor " + UserState.userProfile.UserId);
                //UserClient.GetUsersInjuries(UserState.userProfile.UserId);
                userInjuries = await UserClient.GetUsersInjuries(UserState.userProfile.UserId);
                for (int i = 0; i < userInjuries.Count; i++)
                {
                    userInjuries[i].PrintUserInjury();

                }
            }
            catch( Exception e)
            {
                Console.WriteLine(e);
            }
        }
    }

}
