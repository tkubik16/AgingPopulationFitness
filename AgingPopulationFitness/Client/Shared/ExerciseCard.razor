@using AgingPopulationFitness.Shared;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@inject UserClient UserClient;
@inject HttpClient HttpClient;
@inject UserState UserState;
@inject ExerciseFilterState ExerciseFilterState
@inject NavigationManager NavigationManager

<body>
    <div class="exercise-card"  >
        <div class="exercise-main-img-div">
            <img class="exercise-main-img" src="@ExerciseFilterState.allExerciseImages[index]" alt="@exercise.ExerciseName" />
        </div>
        <div class="all-exercise-info" @onclick="@(() => NavigationManager.NavigateTo($"exercise-info/" + exercise.ExerciseId ) )">
            <div class="exercise-info">
                <div class="exercise-name">@exercise.ExerciseName</div>
                <div class="exercise-type">@exercise.ExerciseType</div>
            </div>
            <div class="benefits-section">
                <text>Benefits: </text>
                <div class="exercise-card-benefits">
                    
                    @foreach (var benefit in exercise.Benefits)
                    {
                        <div class="exercise-card-benefit">
                            @benefit.BenefitName
                        </div>
                    }
                </div>
            </div>
            <div class="injuries-section">
                <text>Aggravates: </text>
                <div class="exercise-card-injuries">
                
                    @foreach (var injuryLocation in exercise.InjuryLocations)
                    {
                        <div class="exercise-card-injury">
                            @injuryLocation.BodyPart
                        </div>
                    }
                </div>
            </div>
            
        </div>

    </div>
</body>


@code {
    [Parameter] public Exercise exercise { get; set; }
    [Parameter] public int index { get; set; }
    public string image = null;


    // <img class="exercise-main-img" src="@image" alt="@exercise.ExerciseName" />

    protected override async Task OnInitializedAsync()
    {
        
        image = string.Format("data:image/jpeg;base64,{0}", Convert.ToBase64String(exercise.ExerciseMainImage) );
        StateHasChanged();
    }

    


}
