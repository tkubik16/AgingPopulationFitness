@page "/"
@inject ToastService toastService
@inject UserState UserState;
@inject NavigationManager Navigation;
@inject HttpClient HttpClient
@inject UserClient UserClient
@inject ExerciseFilterState ExerciseFilterState
@inject IJSRuntime JSRuntime
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage;

<head>

    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.1/css/all.css" integrity="sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP" crossorigin="anonymous">

</head>

<PageTitle>Index</PageTitle>

<div class="index-page">
    <section class="landing-section">
        <div class="landing-text-section">
            <div class="landing-text">
                <div class="landing-header">
                    <h1 class="landing-title title-p1">Welcome to</h1>
                    <h1 class="landing-title title-p2">Habit Fitness!</h1>
                </div>
                <div class="landing-body">
                    <p>
                        Welcome to Habit Fitness, where we're dedicated to helping you find safe and effective exercises that won't aggravate your injuries.
                        We understand that injuries can be frustrating and limit your ability to work out, but that doesn't mean you have to give up on your fitness goals.
                        By finding exercises based on injuries you have you'll be able to stay active and achieve the results you want without causing further harm to your body.
                    </p>
                </div>
                @if ( !UserState.isLoggedIn )
                {
                    <div class="landing-footer">
                        <button class="create-account-btn" @onclick="GoToRegister" >Get Started</button>
                        <button class="log-in-btn" @onclick="GoToLogin" >Log in</button>
                    </div>
                }
            </div>
        </div>
        
    </section>
    <section class="calling-card-section">
        <h1 class="created-by-text">Created By:</h1>
        <CallingCard></CallingCard>
    </section>
    <section class="liability-notice">
        <p class="liability-notice-p">
            We are not liable for any injuries incurred from performing any of the exercises found through this resource. 
            This is a side project created by a software engineer who does fitness as a hobby. The exercises are ones found from other sources and have not been filled out 
            by a fitness trainer or someone with any certification or training. This is simply another research tool and each individual needs to make the final call for their own health 
            and safety. This tool is simply to help aid the search of exercises that one may be able to perform and not aggravate any of their injuries.
        </p>
    </section>
</div>
<!--
<button class="btn btn-info" @onclick="@(() => toastService.ShowToast("I'm an INFO message", ToastLevel.Info))">Info Toast</button>
<button class="btn btn-success" @onclick="@(() => toastService.ShowToast("I'm a SUCCESS message", ToastLevel.Success))">Success Toast</button>
<button class="btn btn-warning" @onclick="@(() => toastService.ShowToast("I'm a WARNING message", ToastLevel.Warning))">Warning Toast</button>
<button class="btn btn-danger" @onclick="@(() => toastService.ShowToast("I'm an ERROR message", ToastLevel.Error))">Error Toast</button>
-->

@code{
    [CascadingParameter(Name = "UpdateMenuOnLogIn")] public EventCallback UpdateMenuOnLogIn { get; set; }
    [CascadingParameter(Name = "UpdateMenuOnRefresh")] public EventCallback UpdateMenuOnRefresh { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if( UserState == null)
        {
            Console.WriteLine("user state is null");
        }
        else
        {

            if( UserState.userProfile == null)
            {
                Console.WriteLine("user profile: null");
            }
            else
            {
                Console.WriteLine("user profile:");
                UserState.userProfile.PrintUserProfile();

            }

        }
        if (await sessionStorage.GetItemAsStringAsync("UserId") != null)
        {

            await UserState.Refresh( sessionStorage);
            await UpdateMenuOnRefresh.InvokeAsync();
            UserState.injuryLocations = await UserClient.GetUsersInjuryLocations(UserState.userProfile.UserId);
            ExerciseFilterState.ExerciseFilter.InjuryLocations = UserState.injuryLocations;
            StateHasChanged();
            Console.Write("injuryLcoations list length: ");
            Console.WriteLine(UserState.injuryLocations.Count);
        }


    }

    public void GoToRegister()
    {
        Navigation.NavigateTo("/register");
    }

    public void GoToLogin()
    {
        Navigation.NavigateTo("/login");
    }
}